assist_fylkir = {
	category = alliance
	require_acceptance = no
	is_visible = {
		religion = norse_pagan_reformed
		FROM = {
			has_country_modifier = fylkir_triggered_modifier
		}
	}
	is_allowed = {
		any_known_country = {
			is_in_war = {
				attacker_leader = FROM
				casus_belli = cb_norse_crusade
			}
			NOT = {
				war_with = ROOT
			}
			NOT = {
				truce_with = ROOT
			}
		}
	}
	on_accept = {
		random_known_country = {
			limit = {
				is_in_war = {
					attacker_leader = FROM
					casus_belli = cb_norse_crusade
				}
				NOT = {
					war_with = ROOT
				}
				NOT = {
					truce_with = ROOT
				}
			}
			save_event_target_as = fylkirTarget
		}
		add_trust = {
			who = FROM
			value = 10
			mutual = no
		}
		join_all_offensive_wars_of = FROM
		join_all_defensive_wars_of = FROM
		set_country_flag = assisting_fylkir@event_target:fylkirTarget
	}
	on_decline = {
	}
	ai_acceptance = {
		always = yes
	}
	ai_will_do = {
		army_size = 2
		has_opinion = {
			who = FROM
			value = 50
		}
	}
}

request_canton = {
	category = influence
	alert_index = 6
	alert_tooltip = request_canton_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = canton
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 190
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 30
			}
		}
		FROM = {
			OR = {
				culture = alsatian
				culture = arpitan
				culture = austrian
				culture = bavarian
				culture = burgundian
				culture = lombard
				culture = piedmontese
				culture = piedmontese_new
				culture = swabian
				culture = styrian
				culture = swiss
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = canton
			subject = FROM
		}
		FROM = {
			change_government_to_republic = yes
			add_government_reform = united_cantons_reform
		}
		hidden_effect = {
			FROM = {
				add_government_reform = united_cantons_reform
			}

		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_CANTON
			limit = {
				canton = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_CANTON
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_CANTON
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_CANTON
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_CANTON
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_hostile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#We have a royal marriage
		add_entry = {
			name = MARRIAGE_CANTON
			limit = {
				marriage_with = FROM
			}
			export_to_variable = {
				which = ai_value
				value = 10
			}
		}
		#Proposer's diplomatic reputation 
		add_entry = {
			name = REPUTATION_CANTON
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_CANTON
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_CANTON
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_CANTON
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_CANTON
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_CANTON
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CANTON
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CANTON
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_canton = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = canton
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_papal_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_papal_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = papal_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 50
			}
		}
		FROM = {
			government = theocracy
		}
		FROM = {
			religion = catholic
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = papal_vassal
			subject = FROM
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_PAPAL_VASSAL
			limit = {
				papal_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_PAPAL_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_PAPAL_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_PAPAL_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_PAPAL_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_hostile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_PAPAL_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_PAPAL_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_PAPAL_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_PAPAL_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_PAPAL_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_PAPAL_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_PAPAL_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_PAPAL_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_papal_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = papal_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_greek_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_greek_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = greek_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 50
			}
		}
		FROM = {
			culture_group = byzantine
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = greek_vassal
			subject = FROM
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_GREEK_VASSAL
			limit = {
				greek_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_GREEK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_GREEK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_GREEK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_GREEK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_hostile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_GREEK_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_GREEK_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_GREEK_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_GREEK_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_GREEK_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_GREEK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_GREEK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_GREEK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_greek_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = greek_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_beylik_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_beylik_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = beylik_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 50
			}
		}
		FROM = {
			OR = {
				culture = osman
				culture = sahili
				culture = eretnid
				culture = karamanli
				culture = turkish
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = beylik_vassal
			subject = FROM
		}
		FROM = {
			change_government_to_monarchy = yes
			add_government_reform = expanded_devshirme_reform
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_BEYLIK_VASSAL
			limit = {
				beylik_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_BEYLIK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_BEYLIK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_BEYLIK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_BEYLIK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_hostile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_BEYLIK_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_BEYLIK_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_BEYLIK_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_BEYLIK_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_BEYLIK_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_BEYLIK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_BEYLIK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_BEYLIK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_beylik_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = beylik_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_cossack_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_cossack_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = cossack_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 80
			}
		}
		FROM = {
			is_nomad = yes
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = cossack_vassal
			subject = FROM
		}
		FROM = {
			change_government_to_republic = yes
			add_government_reform = cossack_horde
			add_government_reform = cossack_horde
			change_religion = ROOT
			change_primary_culture = cossack_culture
			capital_scope = {
				change_religion = ROOT
				change_culture = cossack_culture
			}
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_COSSACK_VASSAL
			limit = {
				cossack_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_COSSACK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_COSSACK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_COSSACK_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_COSSACK_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_vassalile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_COSSACK_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_COSSACK_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_COSSACK_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_COSSACK_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_COSSACK_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_COSSACK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_COSSACK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_COSSACK_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_cossack_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = cossack_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_crown_dependency_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_crown_dependency_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = crown_dependency_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 30
			}
		}
		FROM = {
			OR = {
				culture_group = british
				culture_group = gaelic
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = crown_dependency_vassal
			subject = FROM
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_CROWN_DEPENDENCY_VASSAL
			limit = {
				crown_dependency_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_CROWN_DEPENDENCY_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_CROWN_DEPENDENCY_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_CROWN_DEPENDENCY_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_CROWN_DEPENDENCY_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_vassalile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_CROWN_DEPENDENCY_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_CROWN_DEPENDENCY_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_CROWN_DEPENDENCY_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_CROWN_DEPENDENCY_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_CROWN_DEPENDENCY_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_CROWN_DEPENDENCY_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CROWN_DEPENDENCY_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CROWN_DEPENDENCY_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_crown_dependency_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = crown_dependency_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_corsair_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_corsair_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = corsair_vassal
		ROOT = {
			any_owned_province = {
				has_port = yes
			}
		}
		ROOT = {
			culture_group = maghrebi
		}
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 75
			}
			NOT = {
				total_development = PREV
			}
		}
		FROM = {
			culture_group = maghrebi
		}
		FROM = {
			any_owned_province = {
				has_port = yes
			}
			capital_scope = {
				region = maghreb_region
			}
		}
		ROOT = {
			any_owned_province = {
				has_port = yes
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = corsair_vassal
			subject = FROM
		}
		FROM = {
			change_government_to_republic = yes
			add_government_reform = corsair_kingdom
			hidden_effect = {
				add_government_reform = corsair_kingdom
			}
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_CORSAIR_VASSAL
			limit = {
				corsair_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_CORSAIR_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_CORSAIR_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_CORSAIR_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_CORSAIR_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_vassalile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_CORSAIR_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_CORSAIR_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_CORSAIR_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_CORSAIR_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_CORSAIR_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_CORSAIR_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CORSAIR_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_CORSAIR_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_corsair_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = corsair_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_daimyo_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_daimyo_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = daimyo_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
		capital_scope = {
			region = japan_region
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 190
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			capital_scope = {
				region = japan_region
			}
		}
		FROM = {
			NOT = {
				total_development = 75
			}
			NOT = {
				total_development = PREV
			}
		}
		FROM = {
			culture_group = japanese_g
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = daimyo_vassal
			subject = FROM
		}
		FROM = {
			change_government_to_monarchy = yes
			add_government_reform = daimyo
			hidden_effect = {
				add_government_reform = daimyo
			}
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_DAIMYO_VASSAL
			limit = {
				daimyo_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_DAIMYO_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_DAIMYO_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_DAIMYO_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_DAIMYO_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_vassalile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_DAIMYO_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_DAIMYO_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_DAIMYO_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_DAIMYO_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_DAIMYO_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_DAIMYO_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_DAIMYO_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_DAIMYO_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_daimyo_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = daimyo_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}

request_parias_vassal = {
	category = influence
	alert_index = 6
	alert_tooltip = request_parias_vassal_alert_tooltip
	require_acceptance = yes	# Whether the recipient gets an option to decline
	is_visible = {
		can_be_overlord = parias_vassal
		FROM = {
			NOT = {
				is_subject = yes
			}
		}
		FROM = {
			NOT = {
				is_subject_of = ROOT
			}
		}
	}
	is_allowed = {
		is_subject = no
		FROM = {
			has_opinion = {
				who = ROOT
				value = 150
			}
			alliance_with = ROOT
			is_subject = no
		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
		FROM = {
			NOT = {
				total_development = 75
			}
			NOT = {
				total_development = PREV
			}
		}
		FROM = {
			any_owned_province = {
				has_port = yes
			}
			capital_scope = {
				region = iberia_region
			}
		}
		ROOT = {
			any_owned_province = {
				has_port = yes
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = parias_vassal
			subject = FROM
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}
	ai_acceptance = {
		# This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		#Size of Trade League
		add_entry = {
			name = SIZE_PARIAS_VASSAL
			limit = {
				parias_vassal = 4
			}
			export_to_variable = {
				#needs testing
				which = ai_value
				value = -1000
			}
		}
		#Attitude towards proposer
		add_entry = {
			name = ATTITUDE_PARIAS_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_friendly
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_allied
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = ATTITUDE_PARIAS_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_threatened
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
		add_entry = {
			name = ATTITUDE_PARIAS_VASSAL
			limit = {
				FROM = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_neutral
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ATTITUDE_PARIAS_VASSAL
			limit = {
				FROM = {
					OR = {
						ai_attitude = {
							who = ROOT
							attitude = attitude_vassalile
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_outraged
						}
						ai_attitude = {
							who = ROOT
							attitude = attitude_rivalry
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		#Proposer's diplomatic reputation
		add_entry = {
			name = REPUTATION_PARIAS_VASSAL
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
			}
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		#Target's opinion of Proposer
		add_entry = {
			name = OPINION_PARIAS_VASSAL
			export_to_variable = {
				which = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			divide_variable = {
				which = ai_value
				value = 4
			}
		}
		#Nation has a religion not in the same religious group
		add_entry = {
			name = RELIGION_PARIAS_VASSAL
			limit = {
				NOT = {
					religion_group = FROM
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		#Nation has a different religion within the same religious group
		add_entry = {
			name = SAME_GROUP_DIFFERENT_RELIGION_PARIAS_VASSAL
			limit = {
				NOT = {
					religion = FROM
				}
				religion_group = FROM
			}
			export_to_variable = {
				which = ai_value
				value = -10
			}
		}
		#Proposer army strength power compared to target nation
		add_entry = {
			name = ARMY_PARIAS_VASSAL
			limit = {
				NOT = {
					army_strength = {
						who = FROM
						value = 0.25
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ARMY_PARIAS_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 0.25
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 1
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 80
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_PARIAS_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 1
				}
				NOT = {
					army_strength = {
						who = FROM
						value = 4
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:army_size
			}
			export_to_variable = {
				which = army_from
				value = trigger_value:army_size
				who = FROM
			}
			divide_variable = {
				which = ai_value
				which = army_from
			}
			subtract_variable = {
				which = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = 20
			}
			divide_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = ARMY_PARIAS_VASSAL
			limit = {
				army_strength = {
					who = FROM
					value = 4
				}
			}
			export_to_variable = {
				which = ai_value
				value = 20
			}
		}
	}
	ai_will_do = {
		# this is a trigger
		always = yes
	}
}

cancel_parias_vassal = {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = parias_vassal
		}
	}
	is_allowed = {
		FROM = {
			prestige = 0
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -25
			mutual = yes
		}
		FROM = {
			grant_independence = yes
			add_prestige = -25
		}
	}
	ai_will_do = {
		always = no
	}
}